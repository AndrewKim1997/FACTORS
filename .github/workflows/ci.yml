name: CI

on:
  push:
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  test:
    name: Test (py${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    timeout-minutes: 45

    env:
      # workspace-local pip cache directory
      PIP_CACHE_DIR: ${{ github.workspace }}/.pip-cache

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ${{ env.PIP_CACHE_DIR }}
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('envs/pip-cpu.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install dependencies and dev tooling
        run: |
          python -m pip install --upgrade pip setuptools wheel
          if [ -f envs/pip-cpu.txt ]; then
            pip install -r envs/pip-cpu.txt
          fi
          # ensure test & lint tooling available
          pip install pytest pytest-cov ruff black
          # try editable install of package with dev extras (non-fatal)
          pip install -e ".[dev]" || true

      - name: Run linters (ruff, black check)
        run: |
          if command -v ruff >/dev/null 2>&1; then
            ruff check src tests || true
          else
            echo "ruff not installed"
          fi
          if command -v black >/dev/null 2>&1; then
            black --check src tests || true
          else
            echo "black not installed"
          fi

      - name: Run unit tests
        run: |
          python -m pytest -q tests/unit

      - name: Download small datasets needed for sanity job
        run: |
          bash scripts/download_data.sh concrete car || echo "download script may have failed; continuing"

      - name: Run integration sanity test (single quick job)
        run: |
          python -m pytest -q tests/integration/test_end_to_end_sanity.py -k "not slow" || true

      - name: Upload test summary (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts-${{ matrix.python-version }}
          path: |
            tests/pytest-*.log
            experiments/sanity/**/metrics.json
          if-no-files-found: ignore
