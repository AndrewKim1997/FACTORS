# .github/workflows/docker-ci.yml
# Docker CI workflow: build, tag, and (optionally) push CPU and GPU images.
#
# - Builds both docker/Dockerfile.cpu and docker/Dockerfile.gpu
# - Uses GitHub Container Registry (ghcr.io) by default; set REGISTRY env to override
# - Pushing requires a registry login; this workflow logs in with GITHUB_TOKEN (GHCR) or a PAT if provided
# - After build, the CPU job runs a short smoke command inside the built image to verify basic entrypoint behavior
#
# Secrets:
# - For ghcr.io push you can rely on GITHUB_TOKEN permissions for the current repo.
# - If using a different registry, set `DOCKER_USERNAME` and `DOCKER_PASSWORD` secrets and set env.REGISTRY accordingly.

name: Docker CI

on:
  push:
    branches: ["main", "master"]
  workflow_dispatch:

env:
  # override this variable in GH Actions environment or repository variables if you use another registry
  REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_NAME: factors

permissions:
  contents: read
  packages: write

jobs:
  build-and-push-cpu:
    name: Build & push CPU image
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU (optional multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Build and push CPU image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile.cpu
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cpu-${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cpu-latest
          build-args: |
            PYTHON_VERSION=3.11

      - name: Smoke test CPU image (run entrypoint help)
        run: |
          IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cpu-${{ github.sha }}
          docker run --rm --entrypoint /usr/local/bin/factors-entrypoint.sh ${IMAGE} help || true

      - name: Create outputs json
        run: echo "{\"cpu_image\":\"${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cpu-${{ github.sha }}\"}" > docker_images.json

      - name: Upload Docker build metadata
        uses: actions/upload-artifact@v4
        with:
          name: docker-images-${{ github.sha }}
          path: docker_images.json

  build-and-push-gpu:
    name: Build & push GPU image
    runs-on: ubuntu-latest
    needs: build-and-push-cpu
    timeout-minutes: 90
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push GPU image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile.gpu
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:gpu-${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:gpu-latest
          build-args: |
            UBUNTU_VERSION=22.04

      - name: Upload GPU build metadata
        uses: actions/upload-artifact@v4
        with:
          name: docker-images-gpu-${{ github.sha }}
          path: |
            docker_images.json
            # if you want to write additional metadata, add it here
